name: API Deployment on AKS

on:
  push:
    branches:
      - main
env:
  REGISTRY_NAME: newlookapi
  CLUSTER_NAME: Newlook-aks
  CLUSTER_RESOURCE_GROUP: NewLook-Test
  NAMESPACE: default
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@main
    
    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.DOCKERUSER }} 
        password: ${{ secrets.DOCKERPASSWORD }}
    
    # Container build and push to a Azure Container registry (ACR)
    - run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/newlook:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/newlook:${{ github.sha }}

    
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    # Create imagepullsecret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.DOCKERUSER }}
        container-registry-password: ${{ secrets.DOCKERPASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}

    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v1
      with:        
        manifests: |
          k8s/deployment.yml
          k8s/service.yml
        images: '${{ env.REGISTRY_NAME }}.azurecr.io/newlook:${{ github.sha }}'
        imagepullsecrets: ${{ env.REGISTRY_NAME }}-registry-connection
        action: deploy
    